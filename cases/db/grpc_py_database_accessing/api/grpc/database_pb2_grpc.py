# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from .database_pb2 import *


class DatabaseStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDb = channel.unary_unary(
                '/api.Database/GetDb',
                request_serializer=GetDbRequest.SerializeToString,
                response_deserializer=GetDbResponse.FromString,
                )
        self.InsertDb = channel.unary_unary(
                '/api.Database/InsertDb',
                request_serializer=InsertDbRequest.SerializeToString,
                response_deserializer=InsertDbResponse.FromString,
                )
        self.DeleteDb = channel.unary_unary(
                '/api.Database/DeleteDb',
                request_serializer=DeleteDbRequest.SerializeToString,
                response_deserializer=DeleteDbResponse.FromString,
                )
        self.UpdateDb = channel.unary_unary(
                '/api.Database/UpdateDb',
                request_serializer=UpdateDbRequest.SerializeToString,
                response_deserializer=UpdateDbResponse.FromString,
                )


class DatabaseServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDb(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertDb(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDb(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDb(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DatabaseServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDb': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDb,
                    request_deserializer=GetDbRequest.FromString,
                    response_serializer=GetDbResponse.SerializeToString,
            ),
            'InsertDb': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertDb,
                    request_deserializer=InsertDbRequest.FromString,
                    response_serializer=InsertDbResponse.SerializeToString,
            ),
            'DeleteDb': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDb,
                    request_deserializer=DeleteDbRequest.FromString,
                    response_serializer=DeleteDbResponse.SerializeToString,
            ),
            'UpdateDb': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDb,
                    request_deserializer=UpdateDbRequest.FromString,
                    response_serializer=UpdateDbResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.Database', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Database(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDb(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Database/GetDb',
            GetDbRequest.SerializeToString,
            GetDbResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InsertDb(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Database/InsertDb',
            InsertDbRequest.SerializeToString,
            InsertDbResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDb(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Database/DeleteDb',
            DeleteDbRequest.SerializeToString,
            DeleteDbResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateDb(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Database/UpdateDb',
            UpdateDbRequest.SerializeToString,
            UpdateDbResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
